/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.lgomesd.contratecerto.ui;

import br.lgomesd.contratecerto.Especialidade;
//import br.lgomesd.contratecerto.Especialidade_;
import java.util.Arrays;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.HTML;

/**
 *
 * @author lgome
 */
public class EspecialidadeUIGerenciar extends javax.swing.JDialog {

    /**
     * Creates new form EspecialidadeUI
     */
    
    EntityManagerFactory emf;
    EntityManager em;
    DefaultTableModel model;
    String sqlQuery = "Select e.id, e.nome FROM Especialidade AS e ORDER BY e.id";
    
    
    
    public EspecialidadeUIGerenciar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        emf = Persistence.createEntityManagerFactory("ContrateCertoPU");
        em = emf.createEntityManager();
        
        
        model = new DefaultTableModel();
        tblEspecialidades.setModel(model);
        model.addColumn("Id");
        model.addColumn("Especialidade");
        
        TypedQuery<Object[]> query = em.createQuery(sqlQuery, Object[].class);
        List<Object[]> results = query.getResultList();
        
        for (Object[] result : results) {
            model.addRow(result);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNomeEspecialidade = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCadastrarEspecialidade = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEspecialidades = new javax.swing.JTable();
        lblEspecialidadesCadastradas = new javax.swing.JLabel();
        btnExcluirSelecionados = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtNomeEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeEspecialidadeActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome da Especialidade:");

        btnCadastrarEspecialidade.setText("Cadastrar");
        btnCadastrarEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarEspecialidadeActionPerformed(evt);
            }
        });

        tblEspecialidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblEspecialidades);

        lblEspecialidadesCadastradas.setText("Especialidades cadastradas:");

        btnExcluirSelecionados.setText("Excluir Selecionados");
        btnExcluirSelecionados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirSelecionadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEspecialidadesCadastradas)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNomeEspecialidade))
                        .addComponent(btnCadastrarEspecialidade))
                    .addComponent(btnExcluirSelecionados))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(btnCadastrarEspecialidade)
                .addGap(18, 18, 18)
                .addComponent(lblEspecialidadesCadastradas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirSelecionados)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeEspecialidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeEspecialidadeActionPerformed

    private void btnCadastrarEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarEspecialidadeActionPerformed
        // TODO add your handling code here:
        
        Especialidade e = new Especialidade();
        
        String nomeEspecialidade = txtNomeEspecialidade.getText();
        
        e.setNome(nomeEspecialidade);
        
            em.getTransaction().begin();
            em.persist(e);
            em.getTransaction().commit();
        
        JOptionPane.showMessageDialog(this, "Especialidade cadastrada com sucesso!");
        txtNomeEspecialidade.setText("");
        
        model.setRowCount(0);
        TypedQuery<Object[]> query = em.createQuery(sqlQuery, Object[].class);
        List<Object[]> results = query.getResultList();
        
        for (Object[] result : results) {
            model.addRow(result);
        }
        
    }//GEN-LAST:event_btnCadastrarEspecialidadeActionPerformed

    private void btnExcluirSelecionadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirSelecionadosActionPerformed
        
        int[] linhasSelecionadas = tblEspecialidades.getSelectedRows();
        Arrays.sort(linhasSelecionadas);
        
        for(int result = linhasSelecionadas.length - 1; result >= 0; result--){
            Integer pk = Integer.parseInt(tblEspecialidades.getValueAt(linhasSelecionadas[result], 0).toString());
            System.out.println(tblEspecialidades.getValueAt(linhasSelecionadas[result], 0));
            model.removeRow(linhasSelecionadas[result]);
            Especialidade e = em.find(Especialidade.class, pk);
            em.getTransaction().begin();
            em.remove(e);
            em.getTransaction().commit();
            
        }
        
        
        
    }//GEN-LAST:event_btnExcluirSelecionadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EspecialidadeUIGerenciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EspecialidadeUIGerenciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EspecialidadeUIGerenciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EspecialidadeUIGerenciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EspecialidadeUIGerenciar dialog = new EspecialidadeUIGerenciar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrarEspecialidade;
    private javax.swing.JButton btnExcluirSelecionados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEspecialidadesCadastradas;
    private javax.swing.JTable tblEspecialidades;
    private javax.swing.JTextField txtNomeEspecialidade;
    // End of variables declaration//GEN-END:variables
}
